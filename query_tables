-- Select only the employees who make more than 50K
select first_name, last_name from employees
where salary > 50000
-- Select only the employees who work in Common Grounds coffeeshop
select emp.first_name, emp.last_name, sh.coffeeshop_name from employees emp
inner join shops sh
on sh.coffeeshop_id = emp.coffeeshop_id 
where sh.coffeeshop_name = 'Common Grounds'
-- Select only the employees who work in Common Grounds coffeeshop AND make more than 50K
select emp.first_name, emp.last_name, sh.coffeeshop_name, emp.salary from employees emp
inner join shops sh
on sh.coffeeshop_id = emp.coffeeshop_id 
where sh.coffeeshop_name = 'Common Grounds' and emp.salary > 50000
-- Select only the employees who work in Common Grounds coffeeshop OR make more than 50K
select emp.first_name, emp.last_name, sh.coffeeshop_name, emp.salary from employees emp
inner join shops sh
on sh.coffeeshop_id = emp.coffeeshop_id 
where sh.coffeeshop_name = 'Common Grounds' or emp.salary > 50000
-- Select all the employees who work in Common Grounds, make more than 50K and are male
select emp.first_name, emp.last_name, sh.coffeeshop_name, emp.salary, emp.gender from employees emp
inner join shops sh
on sh.coffeeshop_id = emp.coffeeshop_id 
where sh.coffeeshop_name = 'Common Grounds' and emp.salary > 50000 and emp.gender = 'M'
-- IS, IS NOT, IN, NOT IN, IS NULL, IS NOT NULL, BETWEEN operators
select * from employees
select * from shops
select * from locations
select * from suppliers
-- Select all rows from the suppliers table where the supplier is 'Beans and Barley'
select * from suppliers
where supplier_name = 'Beans and Barley'
-- Select all rows from the suppliers table where the supplier IS NOT 'Beans and Barley'
select * from suppliers
where supplier_name != ('Beans and Barley')
-- Select all Robusta and Arabica coffee types
select * from suppliers
where coffee_type IN ('Arabica', 'Robusta')
-- Select all coffee types that are not Robusta or Arabica
select * from suppliers
where coffee_type NOT IN ('Arabica', 'Robusta')
-- Select all employees with missing email address
select first_name, last_name, email from employees
where email IS NULL
-- Select all employees whose email are not missing
select first_name, last_name, email from employees
where email IS NOT NULL
-- Select all employees who make between 35K and 50K
select first_name, last_name, salary from employees
where salary BETWEEN 35000 and 50000
-- or
select first_name, last_name, salary from employees
where salary >= 35000 and salary <= 50000
-- ORDER BY, LIMIT, DISTINCT, Renaming columns (AS)
-- Top 10 highest paid employees
select * from employees
ORDER BY salary DESC
LIMIT 10
-- Return all unique coffeeshop ids
select distinct(coffeeshop_id) from employees
-- Renaming columns
select email, email AS email_address, hire_date, hire_date AS date_joined, salary, salary AS pay
from employees
-- EXTRACT DOW, DOY, MONTH, DAY, YEAR, QUARTER, WEEK FROM columns
select hire_date,
EXTRACT (DOW FROM hire_date) AS day_of_the_week,
EXTRACT (DOY FROM hire_date) AS day_of_the_year,
EXTRACT (MONTH FROM hire_date) AS month,
EXTRACT (DAY FROM hire_date) AS day,
EXTRACT (YEAR FROM hire_date) AS year,
EXTRACT (QUARTER FROM hire_date) AS quarter,
EXTRACT (WEEK FROM hire_date) AS week
from employees
-- UPPER, LOWER, LENGTH
-- Uppercase and lowercase first and last names
select first_name, UPPER(first_name) AS first_name_upper,
	   last_name, UPPER(last_name) AS last_name_upper,
	   first_name, LOWER(first_name) AS first_name_lower,
	   last_name, LOWER(last_name) AS last_name_lower
from employees
-- Return the email and the length of emails
select email, LENGTH(email) AS email_length from employees
-- Concatenation, Case When, Wildcards
-- Concatenate first and last names to create full names
select concat_ws(' ', first_name, last_name) AS full_name from employees
-- OR
select first_name || ' ' || last_name from employees
-- Concatenate columns to create a sentence
select concat_ws(' ', first_name, last_name, 'makes', salary) from employees
-- If the employees make less than 50K, then true, otherwise false
select concat_ws(' ', first_name, last_name), salary,
CASE 
WHEN salary < 50000 THEN 'true' ELSE 'false'
END AS less_than_50K
from employees
-- If an employee is a female and makes less than 50K, then true, otherwise false
select concat_ws(' ', first_name, last_name), salary,
CASE 
WHEN salary < 50000 and gender = 'F' THEN 'true' ELSE 'false'
END AS less_than_50K_female
from employees
-- Case When with Wildcards. If the email has '.com', return true, otherwise false
select email,
CASE WHEN email LIKE '%.com%' THEN 'true' ELSE 'False'
END AS email_com
from employees

